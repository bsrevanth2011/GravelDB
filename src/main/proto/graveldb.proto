syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.bsrevanth2011.github.graveldb";
option java_outer_classname = "GravelDBProto";

package graveldb;

service GravelDBConsensusService {
  rpc RequestInstanceId(Info) returns (Info) {}
  rpc RequestVote(VoteRequest) returns (VoteResponse) {}
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse) {}
}

//service GravelDBService {
//  rpc Get() returns () {}
//  rpc Put() returns () {}
//  rpc Delete() returns () {}
//}

message Info {
  string instanceId = 1;
}

message VoteRequest {
  uint32 term = 1;    // candidate's term
  string candidateId = 2;   // candidate requesting vote
  uint32 lastLogTerm = 3;   // term of candidate's last log entry
  uint32 lastLogIndex = 4;    // index of candidate's last log entry
}

message VoteResponse {
  uint32 term = 1;    // currentTerm, for candidate to update itself
  bool voteGranted = 2;   // true means candidate received vote
}

message AppendEntriesRequest {
  uint32 term = 1;    // leader’s term
  string leaderId = 2;    // so follower can redirect clients
  uint32 prevLogIndex  = 3;   // index of log entry immediately preceding new ones
  uint32 prevLogTerm = 4;   // term of prevLogIndex entry
  repeated string entries = 5;    // log entries to store (empty for heartbeat; may send more than one for efficiency)
  uint32 leaderCommit = 6;    // leader’s commitIndex
}

message AppendEntriesResponse {
  uint32 term = 1;    // currentTerm, for leader to update itself
  bool success  = 2;    // true if follower contained entry matching prevLogIndex and prevLogTerm
}

